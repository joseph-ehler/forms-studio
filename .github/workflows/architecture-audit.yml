name: Architecture Audit

on:
  pull_request:
    paths:
      - 'packages/**'
      - 'tools/**'
      - '.github/workflows/architecture-audit.yml'
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  audit:
    name: DS/Forms Layer Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: Install ripgrep
        run: |
          sudo apt-get update
          sudo apt-get install -y ripgrep
      
      - name: Install fd
        run: |
          sudo apt-get install -y fd-find
          sudo ln -s $(which fdfind) /usr/local/bin/fd
      
      - name: Run Architecture Audit
        id: audit
        run: |
          node scripts/audit/run-architecture-audit.mjs --json > audit.json
          cat audit.json
        continue-on-error: true
      
      - name: Upload Audit Report
        uses: actions/upload-artifact@v3
        with:
          name: architecture-audit-report
          path: audit.json
      
      - name: Parse Audit Results
        id: parse
        run: |
          SCORE=$(jq -r '.score' audit.json)
          VIOLATIONS=$(jq -r '.totalViolations' audit.json)
          PASSING=$(jq -r '.passingChecks' audit.json)
          TOTAL=$(jq -r '.totalChecks' audit.json)
          
          echo "score=$SCORE" >> $GITHUB_OUTPUT
          echo "violations=$VIOLATIONS" >> $GITHUB_OUTPUT
          echo "passing=$PASSING" >> $GITHUB_OUTPUT
          echo "total=$TOTAL" >> $GITHUB_OUTPUT
      
      - name: Comment PR (if PR)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const audit = JSON.parse(fs.readFileSync('audit.json', 'utf8'));
            
            const score = audit.score;
            const emoji = score === 100 ? '‚úÖ' : score >= 80 ? '‚ö†Ô∏è' : '‚ùå';
            
            let comment = `## ${emoji} Architecture Audit\n\n`;
            comment += `**Score**: ${score}%\n`;
            comment += `**Passing**: ${audit.passingChecks}/${audit.totalChecks} checks\n`;
            comment += `**Violations**: ${audit.totalViolations}\n\n`;
            
            if (score < 100) {
              comment += `### ‚ö†Ô∏è Issues Found\n\n`;
              
              Object.entries(audit.results).forEach(([key, result]) => {
                if (!result.passing) {
                  comment += `- **${result.name}**: ${result.actual} violations\n`;
                  if (result.violations.length > 0) {
                    result.violations.slice(0, 3).forEach(v => {
                      comment += `  - \`${v}\`\n`;
                    });
                    if (result.violations.length > 3) {
                      comment += `  - ...and ${result.violations.length - 3} more\n`;
                    }
                  }
                  comment += '\n';
                }
              });
              
              comment += `\n### üìö Migration Guide\n\n`;
              comment += `See [DEPRECATIONS.md](../blob/main/DEPRECATIONS.md) for migration paths.\n`;
            } else {
              comment += `### ‚úÖ All checks passing!\n\n`;
              comment += `Architecture is clean and follows DS/Forms pattern.\n`;
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
      
      - name: Fail if Score < 100
        if: steps.parse.outputs.score != '100'
        run: |
          echo "‚ùå Architecture audit failed with score ${{ steps.parse.outputs.score }}%"
          echo "Found ${{ steps.parse.outputs.violations }} violations"
          echo ""
          echo "Review audit.json for details"
          echo "See DEPRECATIONS.md for migration paths"
          exit 1
      
      - name: Success
        if: steps.parse.outputs.score == '100'
        run: |
          echo "‚úÖ Architecture audit passed!"
          echo "All ${{ steps.parse.outputs.total }} checks passing"
