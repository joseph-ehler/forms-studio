name: API Stability

on:
  pull_request:
    paths:
      - 'packages/ds/src/**/*.ts'
      - 'packages/ds/src/**/*.tsx'
      - 'packages/ds/api-extractor.json'
      - 'packages/ds/package.json'
      - 'packages/forms/src/**/*.ts'
      - 'packages/forms/src/**/*.tsx'
      - 'packages/forms/api-extractor.json'
      - 'packages/forms/package.json'

jobs:
  api-extractor:
    name: API Surface Report
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - uses: pnpm/action-setup@v3
        with: 
          version: 8
      
      - uses: actions/setup-node@v4
        with: 
          node-version: 20
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Build packages
        run: |
          pnpm --filter @intstudio/ds build
          pnpm --filter @intstudio/forms build
      
      - name: Run API Extractor (DS)
        run: |
          cd packages/ds
          pnpm dlx @microsoft/api-extractor run --verbose || true
      
      - name: Run API Extractor (Forms)
        run: |
          cd packages/forms
          pnpm dlx @microsoft/api-extractor run --verbose || true
      
      - name: Check for API changes
        id: api-check
        run: |
          DS_CHANGED=false
          FORMS_CHANGED=false
          
          if ! git diff --quiet .reports/api/ds.api.md; then
            DS_CHANGED=true
          fi
          
          if ! git diff --quiet .reports/api/forms.api.md; then
            FORMS_CHANGED=true
          fi
          
          if [ "$DS_CHANGED" = false ] && [ "$FORMS_CHANGED" = false ]; then
            echo "api_changed=false" >> $GITHUB_OUTPUT
            echo "✅ No API changes" >> $GITHUB_STEP_SUMMARY
          else
            echo "api_changed=true" >> $GITHUB_OUTPUT
            echo "## ⚠️ API Surface Changed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            if [ "$DS_CHANGED" = true ]; then
              echo "### DS Package" >> $GITHUB_STEP_SUMMARY
              echo "\`\`\`diff" >> $GITHUB_STEP_SUMMARY
              git diff .reports/api/ds.api.md >> $GITHUB_STEP_SUMMARY
              echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
            fi
            
            if [ "$FORMS_CHANGED" = true ]; then
              echo "### Forms Package" >> $GITHUB_STEP_SUMMARY
              echo "\`\`\`diff" >> $GITHUB_STEP_SUMMARY
              git diff .reports/api/forms.api.md >> $GITHUB_STEP_SUMMARY
              echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            fi
          fi
      
      - name: Require breaking-change label
        if: steps.api-check.outputs.api_changed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const labels = context.payload.pull_request.labels.map(l => l.name);
            const hasBreakingLabel = labels.includes('breaking-change') || labels.includes('major');
            
            if (!hasBreakingLabel) {
              core.setFailed('API surface changed but PR is missing "breaking-change" or "major" label');
              
              github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.name,
                issue_number: context.issue.number,
                body: `## ⚠️ API Surface Changed
                
API Extractor detected changes to the public API surface.

**Required actions:**
1. Add \`breaking-change\` or \`major\` label to this PR
2. Review the API diff above
3. Create a changeset: \`pnpm changeset\`
4. If migration needed, create codemod in \`scripts/codemods/\`

**Why this matters:**
- Breaking changes require semver MAJOR bump
- Consumers may need to update their code
- Codemods help automate migration
                `
              });
            }
      
      - name: Upload API report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: api-report
          path: .reports/api/
          retention-days: 30
  
  type-tests:
    name: Type Snapshot Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: pnpm/action-setup@v3
        with: 
          version: 8
      
      - uses: actions/setup-node@v4
        with: 
          node-version: 20
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Build DS package
        run: pnpm --filter @intstudio/ds build
      
      - name: Run type tests
        run: |
          cd packages/ds
          pnpm dlx tsd
      
      - name: Report success
        run: |
          echo "✅ Type snapshot tests passed" >> $GITHUB_STEP_SUMMARY
  
  danger:
    name: Automated PR Review
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - uses: pnpm/action-setup@v3
        with: 
          version: 8
      
      - uses: actions/setup-node@v4
        with: 
          node-version: 20
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Create reports directory
        run: mkdir -p .reports
      
      - name: Run Danger
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm dlx danger ci
  
  stability-score:
    name: API Stability Score
    needs: [api-extractor, type-tests]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Calculate stability score
        id: score
        run: |
          SCORE=100
          
          # Deduct for API changes
          if [ "${{ needs.api-extractor.result }}" != "success" ]; then
            SCORE=$((SCORE - 30))
          fi
          
          # Deduct for type test failures
          if [ "${{ needs.type-tests.result }}" != "success" ]; then
            SCORE=$((SCORE - 20))
          fi
          
          echo "score=$SCORE" >> $GITHUB_OUTPUT
          
          echo "## 📊 API Stability Score: ${SCORE}/100" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ $SCORE -ge 90 ]; then
            echo "✅ **Excellent** - API is stable" >> $GITHUB_STEP_SUMMARY
          elif [ $SCORE -ge 70 ]; then
            echo "⚠️ **Good** - Minor API changes" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Attention Needed** - Significant API changes" >> $GITHUB_STEP_SUMMARY
          fi
      
      - name: Post score comment
        uses: actions/github-script@v7
        with:
          script: |
            const score = ${{ steps.score.outputs.score }};
            let emoji = '🟢';
            let status = 'Stable';
            
            if (score < 90) {
              emoji = '🟡';
              status = 'Changed';
            }
            if (score < 70) {
              emoji = '🔴';
              status = 'Breaking';
            }
            
            const comment = `## ${emoji} API Stability: ${score}/100 (${status})
            
| Check | Status |
|-------|--------|
| API Surface | ${{ needs.api-extractor.result }} |
| Type Tests | ${{ needs.type-tests.result }} |

[View detailed report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            `;
            
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.name,
              issue_number: context.issue.number,
              body: comment
            });
