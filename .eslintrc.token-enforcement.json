{
  "$schema": "https://json.schemastore.org/eslintrc",
  "rules": {
    "no-restricted-syntax": [
      "error",
      {
        "selector": "Literal[value=/^#(?:[0-9a-fA-F]{3,4}|[0-9a-fA-F]{6}|[0-9a-fA-F]{8})$/]",
        "message": "❌ TOKEN VIOLATION: Hard-coded hex color detected.\nWHY: All colors must come from design tokens for theming support.\nFIX: Use var(--ds-color-*) instead of hex literals.\nEXAMPLE: color: 'var(--ds-color-text)' instead of '#000000'"
      },
      {
        "selector": "JSXAttribute[name.name='style'] JSXExpressionContainer ObjectExpression Property[key.name=/^(color|background|backgroundColor|borderColor|borderTopColor|borderRightColor|borderBottomColor|borderLeftColor|outlineColor)$/] Literal[value=/^#/]",
        "message": "❌ TOKEN VIOLATION: Hard-coded color in inline style.\nWHY: Inline styles with raw colors break theming (light/dark mode, brands).\nFIX: Use var(--ds-color-*) or extract to CSS class with tokens.\nEXAMPLE: style={{ color: 'var(--ds-color-text)' }} or className='ds-text-muted'"
      },
      {
        "selector": "JSXAttribute[name.name='style'] JSXExpressionContainer ObjectExpression Property[key.name=/^(boxShadow|textShadow)$/] Literal[value=/rgba?\\(|hsla?\\(/]",
        "message": "❌ TOKEN VIOLATION: Hard-coded shadow in inline style.\nWHY: Shadows must be themeable for light/dark mode.\nFIX: Use var(--ds-shadow-*) instead of rgba().\nEXAMPLE: boxShadow: 'var(--ds-shadow-overlay-md)'"
      },
      {
        "selector": "JSXAttribute[name.name='style'] JSXExpressionContainer ObjectExpression Property[key.name=/^border.*Radius$/] Literal[value=/^[0-9]/]:not([value=/^(0|50%|100%)$/])",
        "message": "❌ TOKEN VIOLATION: Hard-coded border radius in inline style.\nWHY: Border radius should be consistent and themeable.\nFIX: Use var(--ds-radius-*) instead of pixel values.\nEXAMPLE: borderRadius: 'var(--ds-radius-md)' instead of '8px'"
      },
      {
        "selector": "CallExpression[callee.name='styled'] TemplateLiteral TemplateElement[value.raw=/color\\s*:\\s*#/]",
        "message": "❌ TOKEN VIOLATION: Hard-coded color in styled-component.\nWHY: All colors must use design tokens.\nFIX: Use ${p => p.theme.colors.*} or var(--ds-color-*).\nEXAMPLE: color: var(--ds-color-text);"
      }
    ]
  },
  "overrides": [
    {
      "files": [
        "**/tokens/**/*.ts",
        "**/tokens/**/*.tsx",
        "**/styles/tokens/**/*.ts",
        "**/*.tokens.ts"
      ],
      "rules": {
        "no-restricted-syntax": "off"
      }
    },
    {
      "files": [
        "**/demo/**/*.tsx",
        "**/demo/**/*.ts",
        "**/*.stories.tsx",
        "**/*.test.tsx",
        "**/*.spec.tsx"
      ],
      "rules": {
        "no-restricted-syntax": "warn"
      }
    }
  ]
}
