/**
 * Design System Inputs - Centralized Skin
 * 
 * ALL input, button, and interactive element styles.
 * Uses tokens for radius, sizing, colors.
 * Import ONCE in primitives, NEVER in fields.
 */

/* Import checkbox primitive (Phase 1 beautification) */
@import './ds-checkbox.css';

/* Import toggle primitive (Phase 1 beautification) */
@import './ds-toggle.css';

@layer atoms {
/* ===== Base Input Styles ===== */

.ds-input {
  /* Sizing */
  width: 100%;
  min-height: 48px; /* INTERACTIVE_TOKENS.minHeight.mobile */
  padding: var(--ds-space-3) var(--ds-space-4); /* 12px 16px */
  
  /* Typography */
  font-family: var(--ds-font-body, "Inter", system-ui, -apple-system, sans-serif);
  font-size: 16px; /* Prevents iOS zoom */
  line-height: 1.5;
  
  /* Visual - Using semantic tokens */
  border: 1px solid var(--ds-color-border-subtle);
  border-radius: 6px; /* RADIUS_TOKENS.md */
  background-color: var(--ds-color-surface-base);
  color: var(--ds-color-text-primary);
  box-shadow: none !important; /* FLAT by default */
  
  /* RTL Support - Logical properties */
  text-align: start; /* Instead of left */
  
  /* Transitions - Using TRANSITION_TOKENS */
  transition: background-color 150ms ease-in-out, border-color 150ms ease-in-out, color 150ms ease-in-out; /* TRANSITION_TOKENS.common.colors */
  
  /* Reset */
  appearance: none;
  outline: none;
}

.ds-input::placeholder {
  color: var(--ds-color-text-muted);
}

.ds-input:focus {
  border-color: var(--ds-color-border-focus);
  box-shadow: var(--ds-input-shadow-focus);
}

.ds-input:disabled {
  background-color: var(--ds-color-surface-subtle);
  color: var(--ds-color-text-muted);
  cursor: not-allowed;
  opacity: 0.6;
}

/* Desktop: Adaptive input height (WCAG AA: 44px minimum) */
@media (min-width: 768px) {
  .ds-input {
    min-height: var(--ds-touch-target); /* Auto-adapts: 44px base, 48-64px for A11Y */
    padding: var(--ds-space-3) var(--ds-space-4); /* 12px 16px - keep 4px aligned */
  }
}

/* ===== Input Variants ===== */

.ds-input--sm {
  min-height: 36px;
  padding: var(--ds-space-2) var(--ds-space-3); /* 8px 12px */
  font-size: 14px;
}

.ds-input--lg {
  min-height: 52px;
  padding: var(--ds-space-4) var(--ds-space-5); /* 16px 20px - fixed to 4px grid */
  font-size: 18px;
}

/* ===== Textarea ===== */

.ds-textarea {
  min-height: 96px; /* 4 rows minimum */
  resize: vertical;
}

/* ===== Button Styles ===== */

.ds-button {
  /* Sizing */
  min-height: 48px; /* INTERACTIVE_TOKENS.minHeight.mobile */
  min-width: 88px; /* INTERACTIVE_TOKENS.minWidth.button */
  padding: var(--ds-space-3) var(--ds-space-6); /* 12px 24px */
  
  /* Typography */
  font-family: var(--ds-font-body, "Inter", system-ui, -apple-system, sans-serif);
  font-size: 16px;
  font-weight: 600;
  line-height: 1;
  
  /* Visual - Using semantic tokens */
  border: none;
  border-radius: 8px; /* RADIUS_TOKENS.lg */
  background-color: var(--ds-color-primary-bg);
  color: var(--ds-color-primary-text);
  box-shadow: none !important; /* FLAT by default - shadows only on interaction */
  
  /* Interaction */
  cursor: pointer;
  transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1); /* TRANSITION_TOKENS.common.all */
  
  /* Layout */
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--ds-space-2); /* 8px */
  
  /* Reset - Prevent inheritance */
  appearance: none;
  outline: none;
  text-decoration: none;
  text-shadow: none !important;
  filter: none !important;
}

.ds-button:hover {
  background-color: var(--ds-color-primary-bg-hover);
  box-shadow: var(--ds-input-shadow-md) !important; /* Floating effect */
  transform: translateY(-1px); /* Lift on hover */
}

.ds-button:focus-visible {
  box-shadow: 0 0 0 2px var(--ds-color-surface-base), 0 0 0 4px var(--ds-color-primary-ring) !important;
}

.ds-button:active {
  transform: translateY(0px); /* Back to resting position */
  background-color: var(--ds-color-primary-bg-active);
  box-shadow: var(--ds-input-shadow-sm) !important; /* Pressed but elevated */
}

.ds-button:disabled {
  background-color: var(--ds-color-surface-subtle);
  color: var(--ds-color-text-muted);
  cursor: not-allowed;
  box-shadow: none !important;
  opacity: 0.5;
}

/* Desktop: Adaptive button height (WCAG AA: 44px minimum) */
@media (min-width: 768px) {
  .ds-button {
    min-height: var(--ds-touch-target); /* Auto-adapts: 44px base, 48-64px for A11Y */
    padding: var(--ds-space-3) var(--ds-space-5); /* 12px 20px - fixed to 4px grid */
  }
}

/* ===== Button Variants ===== */

/* Secondary - Outlined button */
.ds-button--secondary {
  background-color: var(--ds-color-secondary-bg);
  color: var(--ds-color-secondary-text);
  border: 1px solid var(--ds-color-border-subtle);
  box-shadow: none !important; /* FLAT by default */
}

.ds-button--secondary:hover {
  background-color: var(--ds-color-secondary-bg-hover);
  border-color: var(--ds-color-border-strong);
  color: var(--ds-color-secondary-text);
  box-shadow: var(--ds-input-shadow-sm) !important; /* Subtle hover */
  transform: translateY(-1px);
}

.ds-button--secondary:active {
  background-color: var(--ds-color-secondary-bg-active);
  color: var(--ds-color-secondary-text);
  box-shadow: none !important; /* FLAT when pressed */
  transform: translateY(0px);
}

.ds-button--secondary:disabled {
  background-color: var(--ds-color-surface-base);
  border-color: var(--ds-color-border-subtle);
  color: var(--ds-color-text-muted);
  opacity: 0.5;
}

/* Ghost - Minimal transparent button */
.ds-button--ghost {
  background-color: var(--ds-color-ghost-bg);
  color: var(--ds-color-ghost-text);
  border: 1px solid transparent;
  box-shadow: none !important;
}

.ds-button--ghost:hover {
  background-color: var(--ds-color-ghost-bg-hover);
  border-color: var(--ds-color-border-subtle);
  box-shadow: none !important;
}

.ds-button--ghost:active {
  background-color: var(--ds-color-ghost-bg-active);
  box-shadow: none !important;
}

/* Danger - Destructive actions */
.ds-button--danger {
  background-color: var(--ds-color-state-danger);
  color: var(--ds-color-text-inverted);
  border: none;
}

.ds-button--danger:hover {
  filter: brightness(0.9);
}

.ds-button--danger:active {
  filter: brightness(0.8);
}

.ds-button--danger:disabled {
  background-color: var(--ds-color-surface-subtle);
  color: var(--ds-color-state-danger);
  opacity: 0.5;
}

/* Success - Confirmations */
.ds-button--success {
  background-color: var(--ds-color-state-success);
  color: var(--ds-color-text-inverted);
  border: none;
}

.ds-button--success:hover {
  filter: brightness(0.9);
}

.ds-button--success:active {
  filter: brightness(0.8);
}

/* Warning - Caution */
.ds-button--warning {
  background-color: var(--ds-color-state-warning);
  color: var(--ds-color-text-primary);
  border: none;
}

.ds-button--warning:hover {
  filter: brightness(0.9);
}

.ds-button--warning:active {
  filter: brightness(0.8);
}

/* Link - Text-only button */
.ds-button--link {
  background-color: transparent;
  color: var(--ds-color-text-link);
  border: none;
  box-shadow: none !important;
  padding: 0; /* Link buttons have no padding */
  min-height: auto;
  text-decoration: underline;
  text-underline-offset: 2px;
}

.ds-button--link:hover {
  color: var(--ds-color-text-link-hover);
  background-color: transparent;
  box-shadow: none !important;
}

.ds-button--link:active {
  filter: brightness(0.8);
  transform: none;
  box-shadow: none !important;
}

/* ===== Icon Sizing ===== */

.ds-icon--xs {
  width: 12px;
  height: 12px;
}

.ds-icon--sm {
  width: 16px;
  height: 16px;
}

.ds-icon--md {
  width: 20px;
  height: 20px;
}

.ds-icon--lg {
  width: 24px;
  height: 24px;
}

.ds-icon--xl {
  width: 32px;
  height: 32px;
}

/* ===== Touch Target Helpers ===== */

.ds-touch-target {
  min-width: 44px;
  min-height: 44px;
}

/* Visual indicator for debugging touch targets */
.ds-touch-target-debug::after {
  content: '';
  position: absolute;
  inset: 0;
  border: 1px dashed color-mix(in oklab, var(--ds-color-primary-ring), transparent 70%);
  pointer-events: none;
}

} /* End @layer atoms */
